package minchessv0.eval;

public class Psqt {

    public static final int[][][][] BONUS = new int[7][2][64][25];
    
    static {

        int[][][] TEMP_BONUS = {
            {// Type 0 - NONE
                {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
                {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
                {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
                {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
                {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
                {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
                {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
                {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }
            },
            {// Type 1 - KING
                {  21, -21 }, {  21, -14 }, {   7,   7 }, {   0,  21 },
                {  14,  -7 }, {  14,   0 }, {   7,  14 }, {  -3,  31 },
                {   3,  11 }, {  -3,  24 }, {  -7,  35 }, { -14,  49 },
                {  -7,  28 }, { -14,  42 }, { -21,  56 }, { -28,  70 },
                { -14,  35 }, { -21,  49 }, { -28,  63 }, { -35,  70 },
                { -21,  35 }, { -28,  49 }, { -35,  63 }, { -35,  70 },
                { -21,  28 }, { -28,  42 }, { -35,  56 }, { -35,  63 },
                { -21,  21 }, { -28,  35 }, { -35,  49 }, { -35,  56 }
            },
            {// Type 2 - QUEEN

                {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
                {   0,   0 }, {   3,   0 }, {   0,   0 }, {   0,   0 },
                {   0,   0 }, {   0,   0 }, {   3,   0 }, {   0,   0 },
                {   0,   0 }, {   0,   0 }, {   0,   0 }, {   7,   0 },
                {   0,   0 }, {   0,   0 }, {   0,   0 }, {   7,   0 },
                {   0,   0 }, {   0,   0 }, {   3,   0 }, {   0,   0 },
                {   0,   0 }, {   3,   0 }, {   0,   0 }, {   0,   0 },
                {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }
            },
            {// Type 3 - ROOK
                {   0,   0 }, {   0,   0 }, {   7,   0 }, {   7,   0 },
                {   0,   0 }, {   0,   0 }, {   7,   0 }, {   7,   0 },
                {   0,   0 }, {   0,   0 }, {   0,   0 }, {   3,   0 },
                {   0,   0 }, {   0,   0 }, {   0,   0 }, {   3,   0 },
                {   0,   0 }, {   0,   0 }, {   0,   0 }, {   3,   0 },
                {   0,   0 }, {   0,   0 }, {   0,   0 }, {   3,   0 },
                {  14,   0 }, {  21,   0 }, {  28,   0 }, {  28,   0 },
                {   7,   0 }, {  14,   0 }, {  21,   0 }, {  21,   0 }
            },
            {// Type 4 - BISHOP
                {   7,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
                {   0,   0 }, {  14,  -7 }, {   0,   0 }, {   0,   0 },
                {   0,   0 }, {   0,   0 }, {  14,   0 }, {   0,   0 },
                {   0,   0 }, {   0,   0 }, {   0,   0 }, {  14,   0 },
                {   0,   0 }, {   0,   0 }, {   0,   0 }, {  14,   0 },
                {   0,   0 }, {   0,   0 }, {  14,   0 }, {   0,   0 },
                {   0,   0 }, {  14,  -7 }, {   0,   0 }, {   0,   0 },
                {   7,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }
            },
            {// Type 5 - KNIGHT
                { -23,   0 }, { -18,   0 }, { -13,   0 }, {  -7,   0 },
                { -35,   0 }, { -21,   0 }, {  -7,   0 }, {   0,   0 },
                { -21,   0 }, {  -7,   0 }, {   0,   0 }, {   0,   0 },
                { -14,   0 }, {   0,   0 }, { 007,   0 }, { 021,   0 },
                { -14,   0 }, {   0,   0 }, { 007,   0 }, { 021,   0 },
                { -21,   0 }, {  -7,   0 }, {   0,   0 }, {   0,   0 },
                { -35,   0 }, { -21,   0 }, {  -7,   0 }, {   0,   0 },
                { -42,   0 }, { -35,   0 }, { -28,   0 }, { -21,   0 }
            },
            {// Type 6 - PAWN
                {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
                {   0,   0 }, {   0,   0 }, {   4,  -4 }, {  -7,   7 },
                {  -7,   7 }, {   3,   0 }, {   3,   0 }, {   3,   0 },
                {  -7,  10 }, {   3,   4 }, {   7,   7 }, {  15,  -1 },
                {  -3,  17 }, {   3,  11 }, {   7,  14 }, {  14,  14 },
                {   7,  14 }, {   7,  21 }, {  14,  21 }, {  14,  21 },
                {  14,  14 }, {  14,  21 }, {  21,  21 }, {  21,  21 },
                {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }
            },
        };

        for(int player = 0; player < 2; player ++) {
            for(int type = 0; type < 7; type ++) {
                for(int rank = 0; rank < 8; rank ++) {
                    for(int file = 0; file < 4; file ++) {
                        int squareLeft = (player == 0 ? rank << 3 | file : (7 - rank) << 3 | file);
                        int squareRight = (player == 0 ? rank << 3 | (7 - file) : (7 - rank) << 3 | (7 - file));
                        int initialValue = TEMP_BONUS[type][rank << 2 | file][0];
                        int phaseAdd = TEMP_BONUS[type][rank << 2 | file][1];
                        for(int phase = 0; phase < 25; phase ++) {
                            int value = initialValue + phaseAdd * phase / 24;
                            BONUS[type][player][squareLeft][phase] = value;
                            BONUS[type][player][squareRight][phase] = value;
                        }
                    }
                }
            }
        }
    }
}